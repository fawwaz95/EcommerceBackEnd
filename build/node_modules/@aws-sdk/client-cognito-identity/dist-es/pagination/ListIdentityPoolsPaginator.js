"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.paginateListIdentityPools = paginateListIdentityPools;
var _CognitoIdentityClient = require("../CognitoIdentityClient");
var _ListIdentityPoolsCommand = require("../commands/ListIdentityPoolsCommand");
const makePagedClientRequest = async (client, input, ...args) => {
  return await client.send(new _ListIdentityPoolsCommand.ListIdentityPoolsCommand(input), ...args);
};
async function* paginateListIdentityPools(config, input, ...additionalArguments) {
  let token = config.startingToken || undefined;
  let hasNext = true;
  let page;
  while (hasNext) {
    input.NextToken = token;
    input["MaxResults"] = config.pageSize;
    if (config.client instanceof _CognitoIdentityClient.CognitoIdentityClient) {
      page = await makePagedClientRequest(config.client, input, ...additionalArguments);
    } else {
      throw new Error("Invalid client, expected CognitoIdentity | CognitoIdentityClient");
    }
    yield page;
    const prevToken = token;
    token = page.NextToken;
    hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));
  }
  return undefined;
}