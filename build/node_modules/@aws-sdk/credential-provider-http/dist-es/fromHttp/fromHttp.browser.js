"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fromHttp = void 0;
var _fetchHttpHandler = require("@smithy/fetch-http-handler");
var _propertyProvider = require("@smithy/property-provider");
var _checkUrl = require("./checkUrl");
var _requestHelpers = require("./requestHelpers");
var _retryWrapper = require("./retry-wrapper");
const fromHttp = options => {
  let host;
  const full = options.credentialsFullUri;
  if (full) {
    host = full;
  } else {
    throw new _propertyProvider.CredentialsProviderError("No HTTP credential provider host provided.");
  }
  const url = new URL(host);
  (0, _checkUrl.checkUrl)(url);
  const requestHandler = new _fetchHttpHandler.FetchHttpHandler();
  return (0, _retryWrapper.retryWrapper)(async () => {
    const request = (0, _requestHelpers.createGetRequest)(url);
    if (options.authorizationToken) {
      request.headers.Authorization = options.authorizationToken;
    }
    const result = await requestHandler.handle(request);
    return (0, _requestHelpers.getCredentials)(result.response);
  }, options.maxRetries ?? 3, options.timeout ?? 1000);
};
exports.fromHttp = fromHttp;