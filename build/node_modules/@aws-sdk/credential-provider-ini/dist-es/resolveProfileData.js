"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resolveProfileData = void 0;
var _propertyProvider = require("@smithy/property-provider");
var _resolveAssumeRoleCredentials = require("./resolveAssumeRoleCredentials");
var _resolveProcessCredentials = require("./resolveProcessCredentials");
var _resolveSsoCredentials = require("./resolveSsoCredentials");
var _resolveStaticCredentials = require("./resolveStaticCredentials");
var _resolveWebIdentityCredentials = require("./resolveWebIdentityCredentials");
const resolveProfileData = async (profileName, profiles, options, visitedProfiles = {}) => {
  const data = profiles[profileName];
  if (Object.keys(visitedProfiles).length > 0 && (0, _resolveStaticCredentials.isStaticCredsProfile)(data)) {
    return (0, _resolveStaticCredentials.resolveStaticCredentials)(data);
  }
  if ((0, _resolveAssumeRoleCredentials.isAssumeRoleProfile)(data)) {
    return (0, _resolveAssumeRoleCredentials.resolveAssumeRoleCredentials)(profileName, profiles, options, visitedProfiles);
  }
  if ((0, _resolveStaticCredentials.isStaticCredsProfile)(data)) {
    return (0, _resolveStaticCredentials.resolveStaticCredentials)(data);
  }
  if ((0, _resolveWebIdentityCredentials.isWebIdentityProfile)(data)) {
    return (0, _resolveWebIdentityCredentials.resolveWebIdentityCredentials)(data, options);
  }
  if ((0, _resolveProcessCredentials.isProcessProfile)(data)) {
    return (0, _resolveProcessCredentials.resolveProcessCredentials)(options, profileName);
  }
  if ((0, _resolveSsoCredentials.isSsoProfile)(data)) {
    return (0, _resolveSsoCredentials.resolveSsoCredentials)(data);
  }
  throw new _propertyProvider.CredentialsProviderError(`Profile ${profileName} could not be found or parsed in shared credentials file.`);
};
exports.resolveProfileData = resolveProfileData;