"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultProvider = void 0;
var _credentialProviderEnv = require("@aws-sdk/credential-provider-env");
var _credentialProviderIni = require("@aws-sdk/credential-provider-ini");
var _credentialProviderProcess = require("@aws-sdk/credential-provider-process");
var _credentialProviderSso = require("@aws-sdk/credential-provider-sso");
var _credentialProviderWebIdentity = require("@aws-sdk/credential-provider-web-identity");
var _propertyProvider = require("@smithy/property-provider");
var _sharedIniFileLoader = require("@smithy/shared-ini-file-loader");
var _remoteProvider = require("./remoteProvider");
const defaultProvider = (init = {}) => (0, _propertyProvider.memoize)((0, _propertyProvider.chain)(...(init.profile || process.env[_sharedIniFileLoader.ENV_PROFILE] ? [] : [(0, _credentialProviderEnv.fromEnv)()]), (0, _credentialProviderSso.fromSSO)(init), (0, _credentialProviderIni.fromIni)(init), (0, _credentialProviderProcess.fromProcess)(init), (0, _credentialProviderWebIdentity.fromTokenFile)(init), (0, _remoteProvider.remoteProvider)(init), async () => {
  throw new _propertyProvider.CredentialsProviderError("Could not load credentials from any providers", false);
}), credentials => credentials.expiration !== undefined && credentials.expiration.getTime() - Date.now() < 300000, credentials => credentials.expiration !== undefined);
exports.defaultProvider = defaultProvider;