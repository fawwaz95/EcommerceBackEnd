"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getRuntimeConfig = void 0;
var _package = _interopRequireDefault(require("../package.json"));
var _defaultStsRoleAssumers = require("./defaultStsRoleAssumers");
var _core = require("@aws-sdk/core");
var _credentialProviderNode = require("@aws-sdk/credential-provider-node");
var _utilUserAgentNode = require("@aws-sdk/util-user-agent-node");
var _configResolver = require("@smithy/config-resolver");
var _hashNode = require("@smithy/hash-node");
var _middlewareRetry = require("@smithy/middleware-retry");
var _nodeConfigProvider = require("@smithy/node-config-provider");
var _nodeHttpHandler = require("@smithy/node-http-handler");
var _utilBodyLengthNode = require("@smithy/util-body-length-node");
var _utilRetry = require("@smithy/util-retry");
var _runtimeConfig = require("./runtimeConfig.shared");
var _smithyClient = require("@smithy/smithy-client");
var _utilDefaultsModeNode = require("@smithy/util-defaults-mode-node");
const getRuntimeConfig = config => {
  (0, _smithyClient.emitWarningIfUnsupportedVersion)(process.version);
  const defaultsMode = (0, _utilDefaultsModeNode.resolveDefaultsModeConfig)(config);
  const defaultConfigProvider = () => defaultsMode().then(_smithyClient.loadConfigsForDefaultMode);
  const clientSharedValues = (0, _runtimeConfig.getRuntimeConfig)(config);
  (0, _core.emitWarningIfUnsupportedVersion)(process.version);
  return {
    ...clientSharedValues,
    ...config,
    runtime: "node",
    defaultsMode,
    bodyLengthChecker: (config === null || config === void 0 ? void 0 : config.bodyLengthChecker) ?? _utilBodyLengthNode.calculateBodyLength,
    credentialDefaultProvider: (config === null || config === void 0 ? void 0 : config.credentialDefaultProvider) ?? (0, _defaultStsRoleAssumers.decorateDefaultCredentialProvider)(_credentialProviderNode.defaultProvider),
    defaultUserAgentProvider: (config === null || config === void 0 ? void 0 : config.defaultUserAgentProvider) ?? (0, _utilUserAgentNode.defaultUserAgent)({
      serviceId: clientSharedValues.serviceId,
      clientVersion: _package.default.version
    }),
    maxAttempts: (config === null || config === void 0 ? void 0 : config.maxAttempts) ?? (0, _nodeConfigProvider.loadConfig)(_middlewareRetry.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),
    region: (config === null || config === void 0 ? void 0 : config.region) ?? (0, _nodeConfigProvider.loadConfig)(_configResolver.NODE_REGION_CONFIG_OPTIONS, _configResolver.NODE_REGION_CONFIG_FILE_OPTIONS),
    requestHandler: (config === null || config === void 0 ? void 0 : config.requestHandler) ?? new _nodeHttpHandler.NodeHttpHandler(defaultConfigProvider),
    retryMode: (config === null || config === void 0 ? void 0 : config.retryMode) ?? (0, _nodeConfigProvider.loadConfig)({
      ..._middlewareRetry.NODE_RETRY_MODE_CONFIG_OPTIONS,
      default: async () => (await defaultConfigProvider()).retryMode || _utilRetry.DEFAULT_RETRY_MODE
    }),
    sha256: (config === null || config === void 0 ? void 0 : config.sha256) ?? _hashNode.Hash.bind(null, "sha256"),
    streamCollector: (config === null || config === void 0 ? void 0 : config.streamCollector) ?? _nodeHttpHandler.streamCollector,
    useDualstackEndpoint: (config === null || config === void 0 ? void 0 : config.useDualstackEndpoint) ?? (0, _nodeConfigProvider.loadConfig)(_configResolver.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),
    useFipsEndpoint: (config === null || config === void 0 ? void 0 : config.useFipsEndpoint) ?? (0, _nodeConfigProvider.loadConfig)(_configResolver.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS)
  };
};
exports.getRuntimeConfig = getRuntimeConfig;