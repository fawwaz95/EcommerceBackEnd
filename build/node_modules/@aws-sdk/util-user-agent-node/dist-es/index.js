"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UA_APP_ID_INI_NAME = exports.UA_APP_ID_ENV_NAME = void 0;
Object.defineProperty(exports, "crtAvailability", {
  enumerable: true,
  get: function () {
    return _crtAvailability.crtAvailability;
  }
});
exports.defaultUserAgent = void 0;
var _nodeConfigProvider = require("@smithy/node-config-provider");
var _os = require("os");
var _process = require("process");
var _isCrtAvailable = require("./is-crt-available");
var _crtAvailability = require("./crt-availability");
const UA_APP_ID_ENV_NAME = exports.UA_APP_ID_ENV_NAME = "AWS_SDK_UA_APP_ID";
const UA_APP_ID_INI_NAME = exports.UA_APP_ID_INI_NAME = "sdk-ua-app-id";
const defaultUserAgent = ({
  serviceId,
  clientVersion
}) => {
  const sections = [["aws-sdk-js", clientVersion], ["ua", "2.0"], [`os/${(0, _os.platform)()}`, (0, _os.release)()], ["lang/js"], ["md/nodejs", `${_process.versions.node}`]];
  const crtAvailable = (0, _isCrtAvailable.isCrtAvailable)();
  if (crtAvailable) {
    sections.push(crtAvailable);
  }
  if (serviceId) {
    sections.push([`api/${serviceId}`, clientVersion]);
  }
  if (_process.env.AWS_EXECUTION_ENV) {
    sections.push([`exec-env/${_process.env.AWS_EXECUTION_ENV}`]);
  }
  const appIdPromise = (0, _nodeConfigProvider.loadConfig)({
    environmentVariableSelector: env => env[UA_APP_ID_ENV_NAME],
    configFileSelector: profile => profile[UA_APP_ID_INI_NAME],
    default: undefined
  })();
  let resolvedUserAgent = undefined;
  return async () => {
    if (!resolvedUserAgent) {
      const appId = await appIdPromise;
      resolvedUserAgent = appId ? [...sections, [`app/${appId}`]] : [...sections];
    }
    return resolvedUserAgent;
  };
};
exports.defaultUserAgent = defaultUserAgent;