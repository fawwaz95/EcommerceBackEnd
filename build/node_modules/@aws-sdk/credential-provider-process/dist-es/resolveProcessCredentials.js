"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resolveProcessCredentials = void 0;
var _propertyProvider = require("@smithy/property-provider");
var _child_process = require("child_process");
var _util = require("util");
var _getValidatedProcessCredentials = require("./getValidatedProcessCredentials");
const resolveProcessCredentials = async (profileName, profiles) => {
  const profile = profiles[profileName];
  if (profiles[profileName]) {
    const credentialProcess = profile["credential_process"];
    if (credentialProcess !== undefined) {
      const execPromise = (0, _util.promisify)(_child_process.exec);
      try {
        const {
          stdout
        } = await execPromise(credentialProcess);
        let data;
        try {
          data = JSON.parse(stdout.trim());
        } catch {
          throw Error(`Profile ${profileName} credential_process returned invalid JSON.`);
        }
        return (0, _getValidatedProcessCredentials.getValidatedProcessCredentials)(profileName, data);
      } catch (error) {
        throw new _propertyProvider.CredentialsProviderError(error.message);
      }
    } else {
      throw new _propertyProvider.CredentialsProviderError(`Profile ${profileName} did not contain credential_process.`);
    }
  } else {
    throw new _propertyProvider.CredentialsProviderError(`Profile ${profileName} could not be found in shared credentials file.`);
  }
};
exports.resolveProcessCredentials = resolveProcessCredentials;