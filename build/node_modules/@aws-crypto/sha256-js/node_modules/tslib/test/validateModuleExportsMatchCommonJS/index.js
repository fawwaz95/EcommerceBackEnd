"use strict";

var esTSLib = _interopRequireWildcard(require("../../modules/index.js"));
var _module = require("module");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
// When on node 14, it validates that all of the commonjs exports
// are correctly re-exported for es modules importers.

const nodeMajor = Number(process.version.split(".")[0].slice(1));
if (nodeMajor < 14) {
  console.log("Skipping because node does not support module exports.");
  process.exit(0);
}

// ES Modules import via the ./modules folder

// Force a commonjs resolve

const commonJSTSLib = (0, _module.createRequire)(import.meta.url)("../../tslib.js");
for (const key in commonJSTSLib) {
  if (commonJSTSLib.hasOwnProperty(key)) {
    if (!esTSLib[key]) throw new Error(`ESModules is missing ${key} - it needs to be re-exported in  ./modules/index.js`);
  }
}
console.log("All exports in commonjs are available for es module consumers.");