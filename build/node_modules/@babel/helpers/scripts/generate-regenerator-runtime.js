"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = generateRegeneratorRuntimeHelper;
var _fs = _interopRequireDefault(require("fs"));
var _module = require("module");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; } /* eslint-disable import/no-extraneous-dependencies */
const [parse, generate] = await Promise.all([Promise.resolve().then(() => _interopRequireWildcard(require("@babel/parser"))).then(ns => ns.parse), Promise.resolve().then(() => _interopRequireWildcard(require("@babel/generator"))).then(ns => ns.default.default || ns.default)]).catch(error => {
  console.error(error);
  throw new Error("Before running generate-helpers.js you must compile @babel/parser and @babel/generator.", {
    cause: error
  });
});
const REGENERATOR_RUNTIME_IN_FILE = _fs.default.readFileSync((0, _module.createRequire)(import.meta.url).resolve("regenerator-runtime"), "utf8");
const MIN_VERSION = "7.18.0";
const HEADER = `/* @minVersion ${MIN_VERSION} */
/*
 * This file is auto-generated! Do not modify it directly.
 * To re-generate, update the regenerator-runtime dependency of
 * @babel/helpers and run 'yarn gulp generate-runtime-helpers'.
 */

/* eslint-disable */
`;
const COPYRIGHT = `/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */`;
function generateRegeneratorRuntimeHelper() {
  const ast = parse(REGENERATOR_RUNTIME_IN_FILE, {
    sourceType: "script"
  });
  const factoryFunction = ast.program.body[0].declarations[0].init.callee;
  factoryFunction.type = "FunctionDeclaration";
  factoryFunction.id = {
    type: "Identifier",
    name: "_regeneratorRuntime"
  };
  factoryFunction.params = [];
  factoryFunction.body.body.unshift(...stmts(`
      ${COPYRIGHT}
      _regeneratorRuntime = function () { return exports; };
      var exports = {};
    `));
  const {
    code
  } = generate({
    type: "ExportDefaultDeclaration",
    declaration: factoryFunction
  });
  return HEADER + code;
}
function stmts(code) {
  return parse(`function _() { ${code} }`, {
    sourceType: "script"
  }).program.body[0].body.body;
}